name: Deploy Documentation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
  workflow_dispatch: # Allow manual triggering

env:
  NODE_VERSION: '18'

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Verify docs structure
      run: |
        echo "üìÅ Checking docs directory structure..."
        ls -la docs/
        echo "üì¶ Checking for package files..."
        ls -la docs/package*.json || echo "‚ùå Package files not found"
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      working-directory: docs
      run: |
        echo "üì¶ Installing dependencies..."
        npm ci
        
    - name: Build documentation
      working-directory: docs
      run: |
        # Update base path for subdirectory deployment
        npm run build
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: docs-build
        path: docs/.vitepress/dist/
        retention-days: 30

  deploy-to-pages:
    name: Deploy to GitHub Pages (Backup)
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
      contents: read    # to checkout the repository
      
    steps:
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: docs-build
        path: ./dist
        
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  deploy-to-main-site:
    name: Deploy to Main Site (fractalic.ai/docs)
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: docs-build
        path: ./docs-dist
        
    - name: Deploy to main site repository
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.DEPLOY_TOKEN }}
        external_repository: fractalic-ai/fractalic-site
        publish_branch: main  # Deploy to main branch since it's GitHub Pages
        publish_dir: ./docs-dist
        destination_dir: docs  # This puts docs in /docs subdirectory
        keep_files: true  # Keep existing files in the repository
        commit_message: |
          üìö Deploy docs from fractalic@${{ github.sha }}
          
          Auto-deployed documentation from fractalic repository
          - Updated VitePress documentation
          - Available at fractalic.ai/docs
          
    - name: Comment deployment status
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## üìö Documentation Updated!
            
            The documentation has been built successfully and will be deployed to:
            - **Main site**: https://fractalic.ai/docs
            - **GitHub Pages**: https://fractalic-ai.github.io/fractalic/
            
            Changes in this PR:
            - Modified docs files will be reflected in the live documentation
            - Build artifacts are available for 30 days for review
            `
          });

  # Temporarily disabled due to linting errors - fix separately
  # lint-docs:
  #   name: Lint Documentation
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: ${{ env.NODE_VERSION }}
  #       
  #   - name: Install dependencies
  #     working-directory: docs
  #     run: npm ci
  #       
  #   - name: Lint markdown files
  #     working-directory: docs
  #     run: |
  #       npm run lint
  #       
  #   - name: Check for broken links
  #     working-directory: docs
  #     run: |
  #       # Basic link checking - you might want to add a proper link checker
  #       echo "Checking for common broken link patterns..."
  #       if grep -r "](\.\./" . --include="*.md" | grep -v node_modules; then
  #         echo "‚ö†Ô∏è  Found relative links that might be broken"
  #       else
  #         echo "‚úÖ No obvious broken relative links found"
  #       fi
