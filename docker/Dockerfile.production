# Multi-stage Dockerfile for Pre-built Base Images
# This Dockerfile is optimized for GitHub Actions multi-arch builds

# Stage 1: Base system with dependencies
FROM python:3.11-slim as base

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    gnupg \
    supervisor \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js (version 20)
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs && \
    rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m appuser

# Stage 2: Backend dependencies
FROM base as backend-deps

# Copy and install Python dependencies
COPY requirements.txt /tmp/requirements.txt
RUN pip install --no-cache-dir -r /tmp/requirements.txt

# Stage 3: Frontend dependencies and build
FROM base as frontend-build

# Copy package files first for better caching
COPY fractalic-ui/package*.json /tmp/fractalic-ui/
WORKDIR /tmp/fractalic-ui

# Install dependencies with optimized settings
RUN npm config set registry https://registry.npmjs.org/ && \
    npm config set fetch-retry-mintimeout 20000 && \
    npm config set fetch-retry-maxtimeout 120000 && \
    npm config set fetch-retries 5 && \
    npm ci --only=production --network-timeout=300000

# Copy source code and build
COPY fractalic-ui/ /tmp/fractalic-ui/
COPY docker/next.config.docker.mjs /tmp/fractalic-ui/next.config.mjs

# Build the application
RUN npm run build

# Stage 4: Final production image
FROM backend-deps as production

# Copy backend code
COPY fractalic/ /fractalic/

# Copy built frontend
COPY --from=frontend-build /tmp/fractalic-ui /fractalic-ui/

# Create necessary directories and set permissions
RUN mkdir -p /fractalic/logs /fractalic/user-scripts /fractalic/user-config && \
    chown -R appuser:appuser /fractalic /fractalic-ui

# Copy supervisor configuration
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Set environment variables
ENV PYTHONPATH=/fractalic
ENV NODE_ENV=production

# Switch to non-root user
USER appuser

# Set working directory
WORKDIR /fractalic

# Expose ports
EXPOSE 8000 3000 8001 8002 8003 8004 5859

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Start supervisor
CMD ["supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
