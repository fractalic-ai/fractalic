; supervisord.conf
; Configuration for running all Fractalic services:
; - backend: Main UI server (port 8000)
; - frontend: React UI (port 3000)  
; - ai_server: Fractalic AI execution server (port 8001+)
; - mcp_manager: MCP server manager (port 5859)

[supervisord]
nodaemon=true

[program:backend]
command=python -m uvicorn core.ui_server.server:app --host 0.0.0.0 --port 8000
directory=/fractalic/core/ui_server
autostart=true
autorestart=true
stderr_logfile=/tmp/backend.err.log
stdout_logfile=/tmp/backend.out.log
environment=PYTHONPATH=/fractalic

[program:frontend]
command=npm run dev
directory=/fractalic-ui
autostart=true
autorestart=true
stderr_logfile=/tmp/frontend.err.log
stdout_logfile=/tmp/frontend.out.log

[program:ai_server]
command=python ai_server/fractalic_server.py
directory=/fractalic
autostart=true
autorestart=true
stderr_logfile=/tmp/ai_server.err.log
stdout_logfile=/tmp/ai_server.out.log
environment=PYTHONPATH=/fractalic

[program:mcp_manager_starter]
; MCP manager will be started via UI server endpoint instead of directly
; This ensures proper initialization and coordination between services
; Wait for backend to start, then trigger MCP manager startup
command=bash -c "sleep 15 && curl -X POST http://localhost:8000/api/mcp/start || echo 'MCP manager startup via API failed, will retry...'"
directory=/fractalic
autostart=true
autorestart=false
stderr_logfile=/tmp/mcp_manager_init.err.log
stdout_logfile=/tmp/mcp_manager_init.out.log
environment=PYTHONPATH=/fractalic
